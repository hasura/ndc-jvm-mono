quarkus.application.name=ndc-app
quarkus.log.level=INFO
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
#
quarkus.live-reload.instrumentation=true
#
quarkus.datasource.devservices.enabled=false

quarkus.index-dependency.ndc-ir.group-id=io.hasura
quarkus.index-dependency.ndc-ir.artifact-id=ndc-ir

# HTTP config
quarkus.http.port=8080
quarkus.http.test-port=8081
quarkus.http.access-log.enabled=true
quarkus.http.enable-compression=true
#
%test.quarkus.log.level=DEBUG


# Evict DB connections after 10 minutes of inactivity
hasura.agroal.connection_pool_configuration.reap_timeout=PT10M
# Max lifetime for connections to 2 hours
hasura.agroal.connection_pool_configuration.max_lifetime=PT2H

%dev.quarkus.log.console.json=false
%test.quarkus.log.console.json=false

# OpenTelemetry Configuration
# Service name - can be overridden by OTEL_SERVICE_NAME environment variable
quarkus.otel.service.name=${OTEL_SERVICE_NAME:ndc-jvm-mono}

# OTLP Exporter Configuration
# Endpoint - can be overridden by OTEL_EXPORTER_OTLP_ENDPOINT environment variable
quarkus.otel.exporter.otlp.endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT:http://localhost:4317}

# Protocol - can be overridden by OTEL_EXPORTER_OTLP_PROTOCOL environment variable
# Supported values: grpc (default, port 4317), http/protobuf (port 4318)
quarkus.otel.exporter.otlp.protocol=${OTEL_EXPORTER_OTLP_PROTOCOL:grpc}

# Traces exporter - can be overridden by setting OTEL_TRACES_EXPORTER environment variable
# Set to 'none' to disable tracing, 'otlp' to enable OTLP export
quarkus.otel.traces.exporter=${OTEL_TRACES_EXPORTER:otlp}
