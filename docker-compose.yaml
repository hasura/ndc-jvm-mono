version: "3"

services:
  jaeger:
    image: jaegertracing/all-in-one:1.37
    restart: always
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 4317:4317 # OTLP gRPC
      - 4318:4318 # OTLP HTTP
      - 9411:9411
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      COLLECTOR_ZIPKIN_HOST_PORT: 9411

  ##################
  ### NDC Connectors
  ##################
  ndc-connector-oracle:
    image: ghcr.io/hasura/ndc-jvm-oracle:${IMAGE_TAG_ORACLE}
    build:
      context: "./"
      dockerfile: "ndc-connector-oracle.dockerfile"
      args:
        - JOOQ_PRO_EMAIL=${JOOQ_PRO_EMAIL}
        - JOOQ_PRO_LICENSE=${JOOQ_PRO_LICENSE}
    ports:
      - 8081:8080
    volumes:
      - ./ndc-connector-oracle/configuration.json:/etc/connector/configuration.json

  ndc-connector-mysql:
    image: ghcr.io/hasura/ndc-jvm-mysql:${IMAGE_TAG_MYSQL}
    build:
        context: "./"
        dockerfile: "ndc-connector-mysql.dockerfile"
    ports:
        - 8082:8080
    volumes:
      - ./ndc-connector-mysql/configuration.json:/etc/connector/configuration.json
      - ./ndc-cli/mysql-connector-j-9.0.0.jar:/app/lib/main/mysql-connector-j-9.0.0.jar

  ndc-connector-snowflake:
    image: ghcr.io/hasura/ndc-jvm-snowflake:${IMAGE_TAG_SNOWFLAKE}
    build:
        context: "./"
        dockerfile: "ndc-connector-snowflake.dockerfile"
        args:
          - JOOQ_PRO_EMAIL=${JOOQ_PRO_EMAIL}
          - JOOQ_PRO_LICENSE=${JOOQ_PRO_LICENSE}
    ports:
        - 8083:8080
    volumes:
      - ./ndc-connector-snowflake/configuration.json:/etc/connector/configuration.json

  ndc-connector-phoenix:
    image: ghcr.io/hasura/ndc-jvm-phoenix:${IMAGE_TAG_PHOENIX}
    build:
        context: "./"
        dockerfile: "ndc-connector-phoenix.dockerfile"
    ports:
        - 8084:8080
    volumes:
      - ./ndc-connector-phoenix/configuration.json:/etc/connector/configuration.json

  ##################
  ### Databases
  ##################
  # JDBC url = jdbc:oracle:thin:@//host.docker.internal:1521/XE?user=chinook&password=Password123
  oracle:
      image: gvenzl/oracle-xe:21.3.0-slim
      restart: always
      environment:
          ORACLE_PASSWORD: Password123
      ports:
          - "1521:1521"
      volumes:
          - ./docker/oracle/chinook.sql:/container-entrypoint-initdb.d/chinook.sql

  # JDBC url = jdbc:mysql://mysql:3306/Chinook?user=root&password=Password123
  mysql:
      image: mysql:8.4
      restart: always
      environment:
          MYSQL_ROOT_PASSWORD: Password123
      ports:
          - "3306:3306"
      volumes:
          - ./docker/mysql/chinook.sql:/docker-entrypoint-initdb.d/chinook.sql

  ##################
  ### CLI
  ##################
  ndc-cli:
    image: ghcr.io/hasura/ndc-jvm-cli:${IMAGE_TAG_CLI}
    profiles: [ "tools" ]
    build:
        context: "./"
        dockerfile: "ndc-cli.dockerfile"
    volumes:
      - ./ndc-cli/configuration.json:/app/output/configuration.json
    command: >
      update "jdbc:phoenix:165.227.201.250:2181:/hbase"
      --database=PHOENIX
      --outfile /app/output/configuration.json